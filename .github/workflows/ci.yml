name: Healthcare CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Frontend Tests and Build
  frontend-ci:
    name: 🎨 Frontend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
        
    steps:
    - name: ⬇️ Checkout code
      uses: actions/checkout@v4
      
    - name: ⎔ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: ✅ Run tests
      run: npm test -- --coverage --watchAll=false
      
    - name: 🏗️ Build application
      run: npm run build
      
    - name: 📊 Upload coverage
      uses: codecov/codecov-action@v3
      with:
        directory: ./frontend/coverage

  # Backend Tests
  backend-ci:
    name: 🚀 Backend CI  
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
        
    steps:
    - name: ⬇️ Checkout code
      uses: actions/checkout@v4
      
    - name: ⎔ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: ✅ Run tests
      run: npm test
      env:
        NODE_ENV: test
        
    - name: 🔍 Lint code
      run: |
        npm install -g eslint
        npx eslint src/ --max-warnings=0

  # Docker Build Test
  docker-ci:
    name: 🐳 Docker CI
    runs-on: ubuntu-latest
    steps:
    - name: ⬇️ Checkout code
      uses: actions/checkout@v4
      
    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 🏗️ Build Docker images
      run: |
        docker-compose -f docker-compose.yml build
        
    - name: 🧪 Test Docker containers
      run: |
        docker-compose -f docker-compose.yml up -d
        sleep 30
        echo "📊 Container status:"
        docker-compose ps
        echo "🔍 Backend logs:"
        docker logs healthcare-backend || true
        docker-compose down

  # Security Scan
  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: ⬇️ Checkout code
      uses: actions/checkout@v4
      
    - name: 🛡️ Run security audit
      run: |
        cd frontend && npm audit --audit-level moderate
        cd ../backend && npm audit --audit-level moderate